<?php

namespace Tests\Feature\Unit;

use App\Models\Category;
use App\Models\Product;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Database\Eloquent\Factories;
use Tests\TestCase;

class HttpTest extends TestCase
{
    use RefreshDatabase;
    /**
     * A basic feature test example.
     */


    protected $product, $category;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->category = Category::create([
            'created_at'   => now(),
            'updated_at'   => now(),
        ]);


        $this->product =  Product::create([
            'name'  => 'product 1',
            'price'  => 100,
            'category_id'   => $this->category->id,
        ]);

    }

    public function test_user_can_list_products(): void
    {
        $products = $this->get('/products');

//        dd($products);
        $products->assertStatus(200)->assertSee('pro');
    }


    public function test_user_show_product_by_id(){
        $product = $this->get('/product/'.$this->product->id);
        $product->assertStatus(200)
                ->assertSee('product 1')
                ->assertSee(100);
    }

    public function test_a_product_can_belongs_to_a_category(){
        // arrange or setUp    // optional
//        $product  = Product::factory()->create();
//        $category = Category::factory()->create();


//        $product  = factory(Product::class)->create();
//        $category = factory(Category::class)->create();


        //act  // optional
//        $this->product->category()->associate($this->category)->save();


//        $this->assertDatabaseMissing('products',[
//            'id'            => $this->product->id,
//            'category_id'   => $this->category->id,
//        ]);

        // assert     // required
        // check if this product has category or not
        $this->assertDatabaseHas('products',[
            'id'            => $this->product->id,
            'category_id'   => $this->category->id,
        ]);
    }



}
